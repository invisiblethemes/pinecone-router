class e{constructor(e,t){this.path=e,this.handler=t}setProps(e){this.props=e}handle(e){if("function"==typeof this.handler)return this.handler({props:this.props,route:this.path,path:e,query:window.location.search.substring(1),hash:window.location.hash.substring(1)})}}const t={isLocation:!(!window.history.location&&!window.location),validLink(e){for(;e&&"A"!==e.nodeName.toUpperCase();)e=e.parentNode;if(!e||"A"!==e.nodeName.toUpperCase())return!1;var t="object"==typeof e.href&&"SVGAnimatedString"===e.href.constructor.name;if(e.hasAttribute("download")||"external"===e.getAttribute("rel"))return!1;var n=e.getAttribute("href");return!(n&&n.indexOf("mailto:")>-1||(t?e.target.baseVal:e.target)||!t&&!this.sameOrigin(e.href))},processRoutersInFetchedDoc(e,t,n){let r=e.querySelectorAll("[x-router]");switch(r.length){case 0:"body"==t&&(n=[]);break;case 1:document.querySelector("[x-router]").setAttribute("x-router",""),r[0].isEqualNode(document.querySelector("[x-router]"))?(r[0].setAttribute("x-router","loaded"),document.querySelector("[x-router]").remove()):(n=[],document.querySelector("[x-router]").remove());break;default:throw new Error("Alpine Router: there can only be one router in the same page")}return{doc:e,routes:n}},match(e,t){let n=[],r=e.path.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&").replace(/([:^\s])(\w+)/g,(e,t,r)=>(n.push(r),"([^/]+)"))+"(?:/|$)",o={},i=t.match(new RegExp(r));if(null!==i){if(0!=i.index)return null;if(i.input!=i[0])return null;o=i.slice(1).reduce((e,t,r)=>(null===e&&(e={}),e[n[r]]=t,e),null)}return e.setProps(o),i},toURL(e){if("function"==typeof URL&&this.isLocation)return new URL(e,window.location.toString());var t=window.document.createElement("a");return t.href=e,t},sameOrigin(e){if(!e||!this.isLocation)return!1;var t=this.toURL(e),n=window.location;return n.protocol===t.protocol&&n.hostname===t.hostname&&(n.port===t.port||""===n.port&&(80==t.port||443==t.port))},samePath(e){if(!this.isLocation)return!1;var t=window.location;return e.pathname===t.pathname&&e.search===t.search}},n={routes:[],settings:{interceptLinks:!0,basepath:"/",hash:!1,render:{enabled:!1,selector:"body",preload:!0,preloadtime:200,preloaded:{path:null,content:null}},views:{enabled:!1,basepath:"/"}},loaded:!1,notfound:function(e){console.error(`Alpine Router: requested path ${e} was not found`)},start(){if(!window.Alpine)throw new Error("Alpine is require for `Alpine Router` to work.");this.routerloaded=new Event("routerloaded"),this.loadstart=new Event("loadstart"),this.loadend=new Event("loadend");let e=0;Alpine.onComponentInitialized(t=>{if(t.$el.hasAttribute("x-router")){if("loaded"==t.$el.getAttribute("x-router"))return;if(e>1)throw new Error("Alpine Router: Only one router can be in a page.");if(t.$el.hasAttribute("x-base")&&(this.settings.basepath=el.getAttribute("x-base")),t.$el.hasAttribute("x-render")){this.settings.render.enabled=!0;let e=t.$el.getAttribute("x-render");""!=e&&(this.settings.render.selector=e),this.notfound=null}else if(t.$el.hasAttribute("x-hash")&&(this.settings.hash=!0),t.$el.hasAttribute("x-views")){this.settings.views.enabled=!0;let e=t.$el.getAttribute("x-render");""!=e&&(this.settings.views.basepath=e)}if(Array.from(t.$el.children).forEach(e=>{e.hasAttribute("x-route")&&this.processRoute(e,t)}),t.$el.setAttribute("x-router","loaded"),e++,this.settings.hash){if(""==window.location.hash)return void(document.location.href=window.location.pathname+"#/");this.navigate(window.location.hash.substring(1),!0,!0)}else this.navigate(window.location.pathname,!1,!0);this.loaded=!0,window.dispatchEvent(this.routerloaded)}}),this.interceptLinks(),window.addEventListener("popstate",()=>{this.settings.hash?""!=window.location.hash&&this.navigate(window.location.hash.substring(1),!0):this.navigate(window.location.pathname,!0)})},interceptLinks(){this.settings.interceptLinks&&document.querySelectorAll("a").forEach(e=>{e.hasAttribute("x-link")||0!=t.validLink(e)&&(e.setAttribute("x-link",""),e.addEventListener("mouseover",e=>{if(!this.settings.render.enabled||!this.settings.render.preload)return;let t=e.target.getAttribute("href");null==t&&(t="/"),null!=this.settings.render.preloaded.path&&this.settings.render.preloaded.path==t||window.setTimeout(function(){fetch(t).then(e=>e.text()).then(e=>{window.AlpineRouter.settings.render.preloaded.path=t,window.AlpineRouter.settings.render.preloaded.content=e})},this.settings.render.preloadtime)}),e.addEventListener("click",e=>{e.preventDefault();let t=e.target.getAttribute("href");this.settings.hash?window.location.hash="#"+t:this.navigate(t)},!1))})},processRoute(e,t){if("template"!==e.tagName.toLowerCase())throw new Error("Alpine Router: x-route must be used on a template tag.");let n=e.getAttribute("x-route");if("string"!=typeof n)throw new Error(`Alpine Router: x-route must be a string, ${typeof n} given.`);if(n.indexOf("#")>-1)throw new Error("Alpine Router: A route's path may not have a hash, setting Alpinethis.settings.hash to true is sufficiant.");let r=null;if(0==e.hasAttribute("x-handler")&&0==this.settings.views.enabled)throw new Error('Alpine Router: x-route must have a handler (x-handler="handler") unless using x-render.');if(e.hasAttribute("x-handler")){let o=e.getAttribute("x-handler");try{r=t.getUnobservedData()[o]}catch(e){throw new Error("Alpine Router: "+e)}if("function"!=typeof r)throw new Error(`Alpine Router: handler must be a callback function, ${typeof r} given.`);"notfound"==n&&(this.notfound=r)}"notfound"!=n&&("/"!=this.settings.basepath&&(n=this.settings.basepath+n),this.addRoute(n,r))},navigate(e,n=!1,r=!1){window.dispatchEvent(this.loadstart),null==e&&(e="/");const o=this.routes.find(n=>t.match(n,e));if(null==o&&(!this.settings.render.enabled||this.settings.render.enabled&&null!=this.notfound)&&this.notfound(e),!n){let t;t=this.settings.hash?window.location.pathname+window.location.search+e:e+window.location.search+window.location.hash,history.pushState({path:t},"",t)}!this.settings.render.enabled||r||this.notfound||(null!=this.settings.render.preloaded.path&&this.settings.render.preloaded.path==e?(console.log("Alpine Router: Using preloaded conteent"),this.renderContent(this.settings.render.preloaded.content,this.settings.render.selector),this.settings.render.preloaded.path=null,this.settings.render.preloaded.content=null):fetch(e).then(e=>e.text()).then(e=>{this.renderContent(e,this.settings.render.selector)})),null!=o&&o.handle(e),window.dispatchEvent(this.loadend)},addRoute(t,n){if(null!=this.routes.find(e=>e.path==t))throw new Error("Alpine Router: route already exist");this.routes.push(new e(t,n))},removeRoute(e){this.routes=this.routes.filter(t=>t.path!=e)},renderContent(e,n){let r=(new DOMParser).parseFromString(e,"text/html");r=r.querySelector(n);let o=t.processRoutersInFetchedDoc(r,n,this.routes);r=o.doc,this.routes=o.routes,document.querySelector(n).innerHTML=r.innerHTML,this.interceptLinks()},renderChunks(){}},r=window.deferLoadingAlpine||(e=>e());window.AlpineRouter=n,window.deferLoadingAlpine=function(e){window.AlpineRouter.start(),r(e)};export default n;
//# sourceMappingURL=alpine-router.module.js.map
