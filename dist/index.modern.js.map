{"version":3,"file":"index.modern.js","sources":["../src/route.js","../src/utils.js","../src/index.js"],"sourcesContent":["class Route {\n\tprops = {};\n\tconstructor(path, handlers) {\n\t\tthis.path = path;\n\t\tthis.handlers = handlers;\n\t}\n\n\tsetProps(newProps) {\n\t\tthis.props = newProps;\n\t}\n}\n\nexport default Route;\n","var isLocation = !!(window.history.location || window.location);\n\n/**\n * Check if the anchor element point to a navigation route.\n * @param {Element} el The anchor element\n * @param {boolean} hash Set to true when using hash routing\n * @returns {bool} true if the link is valid for navigation, false otherwise\n */\nexport function validLink(el, hash) {\n\t// The checks in this block are taken from page.js https://github.com/visionmedia/page.js/blob/master/index.js#L370\n\t// el.nodeName for svg links are 'a' instead of 'A'\n\twhile (el && 'A' !== el.nodeName.toUpperCase()) el = el.parentNode;\n\tif (!el || 'A' !== el.nodeName.toUpperCase()) return false;\n\n\t// check if link is inside an svg\n\t// in this case, both href and target are always inside an object\n\tvar svg =\n\t\ttypeof el.href === 'object' &&\n\t\tel.href.constructor.name === 'SVGAnimatedString';\n\n\t// Ignore if tag has\n\t// 1. \"download\" attribute\n\t// 2. rel=\"external\" attribute\n\tif (el.hasAttribute('download') || el.getAttribute('rel') === 'external') {\n\t\treturn false;\n\t}\n\n\t// ensure non-hash for the same path\n\tvar link = el.getAttribute('href');\n\tif (!hash && samePath(el) && (el.hash || '#' === link)) {\n\t\treturn;\n\t}\n\n\tvar link = el.getAttribute('href');\n\n\t// Check for mailto: in the href\n\tif (link && link.indexOf('mailto:') > -1) return false;\n\n\t// check target\n\t// svg target is an object and its desired value is in .baseVal property\n\tif (svg ? el.target.baseVal : el.target) return false;\n\n\t// x-origin\n\t// note: svg links that are not relative don't call click events (and skip page.js)\n\t// consequently, all svg links tested inside page.js are relative and in the same origin\n\tif (!svg && !sameOrigin(el.href)) return false;\n\n\treturn true;\n}\n\n/**\n * Process trailing slash in path based on settings\n * @param {string} path the path to be processed\n * @param {boolean} trail null to ignore true to add false to remove\n * @param {string} path path after adding or removing the slash\n */\nexport function processTrailingSlash(path, trail) {\n\tswitch (trail) {\n\t\tcase true:\n\t\t\tif (!path.endsWith('/')) {\n\t\t\t\tpath += '/';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase false:\n\t\t\tif (path.endsWith('/')) {\n\t\t\t\tpath = path.substr(0, path.length - 1);\n\t\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Create the context object\n * @param {string} route the route\n * @param {string} path the path accessed by the client\n * @param {array} props the routes variables\n * @returns {object} the context object\n */\nexport function buildContext(route, path, props) {\n\treturn {\n\t\troute: route,\n\t\tpath: path,\n\t\tprops: props,\n\t\tquery: window.location.search.substring(1), // query w/out leading '?'\n\t\thash: window.location.hash.substring(1), // hash without leading '#'\n\t\tredirect: (path) => {\n\t\t\twindow.PineconeRouter.navigate(path);\n\t\t\treturn false; // returning false will stop the navigate function, before rendering any views etc.\n\t\t},\n\t};\n}\n\n/**\n * Call a function on all middlewares loaded, if any.\n * @param {string} func middlware function to call.\n * @param {array} args arguments to pass to the function.\n * @returns {boolean} false if the middleware function return false, i.e. it want to stop execution of the function and return.\n */\nexport function middleware(func, args) {\n\tif (window.PineconeRouterMiddlewares == null) return;\n\twindow.PineconeRouterMiddlewares.forEach((plugin) => {\n\t\tif (plugin[func] == null) return;\n\t\treturn plugin[func](...args);\n\t});\n}\n\n/**\n * execute the handlers of routes that are given passing them the context.\n * @param {array} handlers handlers to execute.\n * @param {array} context the current context to pass as argument.\n * @returns {boolean} false if the handler request a redirect.\n */\nexport function handle(handlers, context) {\n\tswitch (typeof handlers) {\n\t\t// multiple handlers; typeof array == 'object\n\t\tcase 'object':\n\t\t\tif (handlers.length == 0) return;\n\n\t\t\tfor (const i in handlers) {\n\t\t\t\tif (typeof handlers[i] == 'function') {\n\t\t\t\t\tlet result = handlers[i](context);\n\t\t\t\t\t// if the handler redirected, return\n\t\t\t\t\t// if not go to the next handler\n\t\t\t\t\tif (result == false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\t// single handler\n\t\tcase 'function':\n\t\t\treturn handlers(context);\n\t}\n}\n\n/**\n * Match the path with specified routes\n * Taken from https://github.com/vijitail/simple-javascript-router/blob/master/src/router/Router.js#L14\n * with some modifications to fix bad behavior\n * @param {string} route the route to check for.\n * @param {string} requestPath the path that's requested by the client.\n */\nexport function match(route, requestPath) {\n\tlet paramNames = [];\n\tlet path = route.path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\tlet regexPath =\n\t\tpath.replace(/([:^\\s])(\\w+)/g, (_full, _colon, name) => {\n\t\t\tparamNames.push(name);\n\t\t\treturn '([^/]+)';\n\t\t}) + '(?:/|$)';\n\n\tlet routeMatch = requestPath.match(new RegExp(regexPath));\n\tif (routeMatch !== null) {\n\t\tif (routeMatch.index != 0) return null;\n\t\tif (routeMatch.input != routeMatch[0]) return null;\n\t\tlet props = routeMatch.slice(1).reduce((params, value, index) => {\n\t\t\tif (params === null) params = {};\n\t\t\tparams[paramNames[index]] = value;\n\t\t\treturn params;\n\t\t}, null);\n\t\troute.setProps(props);\n\t}\n\n\treturn routeMatch;\n}\n\n/**\n * Convert to a URL object\n * https://github.com/visionmedia/page.js/blob/4f9991658f9b9e3de9b6059bade93693af24d6bd/page.js#L888\n */\nfunction toURL(href) {\n\tif (typeof URL === 'function' && isLocation) {\n\t\treturn new URL(href, window.location.toString());\n\t} else {\n\t\tvar anc = window.document.createElement('a');\n\t\tanc.href = href;\n\t\treturn anc;\n\t}\n}\n\n/**\n * Check if `href` is the same origin.\n * https://github.com/visionmedia/page.js/blob/4f9991658f9b9e3de9b6059bade93693af24d6bd/page.js#L888\n */\nfunction sameOrigin(href) {\n\tif (!href || !isLocation) return false;\n\n\tvar url = toURL(href);\n\tvar loc = window.location;\n\n\t/*\n\t\t   When the port is the default http port 80 for http, or 443 for\n\t\t   https, internet explorer 11 returns an empty string for loc.port,\n\t\t   so we need to compare loc.port with an empty string if url.port\n\t\t   is the default port 80 or 443.\n\t\t   Also the comparition with `port` is changed from `===` to `==` because\n\t\t   `port` can be a string sometimes. This only applies to ie11.\n\t\t*/\n\treturn (\n\t\tloc.protocol === url.protocol &&\n\t\tloc.hostname === url.hostname &&\n\t\t(loc.port === url.port ||\n\t\t\t(loc.port === '' && (url.port == 80 || url.port == 443)))\n\t); // jshint ignore:line\n}\n\nfunction samePath(url) {\n\tif (!isLocation) return false;\n\tvar loc = window.location;\n\treturn url.pathname === loc.pathname && url.search === loc.search;\n}\n","import Route from './route.js';\nimport {\n\tmatch,\n\tbuildContext,\n\tprocessTrailingSlash,\n\thandle,\n\tvalidLink,\n\tmiddleware,\n} from './utils.js';\n\nconst PineconeRouter = {\n\tversion: '0.1.0',\n\t/**\n\t * @type {array}\n\t * @summary array of routes instantiated from the Route class.\n\t */\n\troutes: [],\n\n\tsettings: {\n\t\t/**\n\t\t * @type {boolean}\n\t\t * @summary detect if links are of the same origin and let Pinecone Router handle them\n\t\t */\n\t\tinterceptLinks: true,\n\t\tbasepath: '/',\n\t\ttrailingSlash: null,\n\t\thash: false,\n\t\t/**\n\t\t * @type {boolean}\n\t\t * @summary set to true when using x-render or x-views for they dont need handlers\n\t\t */\n\t\tallowNoHandler: false,\n\t\t/**\n\t\t * @type {boolean}\n\t\t * @summary whether or not to push unregistered paths to history.\n\t\t */\n\t\tpushNotfoundToHistory: true,\n\t},\n\n\t/**\n\t * @type {boolean}\n\t * @summary This will be set to true after all routers are\n\t * initialized and the first page loaded\n\t */\n\tloaded: false,\n\n\t/**\n\t * @type {object}\n\t * @summary The context object for current path.\n\t */\n\tcurrentContext: null,\n\n\t/**\n\t * @event pinecone-init\n\t * @summary will be dispatched to window when all routers are\n\t * initialized and the first page loaded\n\t */\n\trouterloaded: new Event('pinecone-init'),\n\n\t/**\n\t * @event pinecone-start\n\t * @summary be dispatched to the window after before page start loading.\n\t */\n\tloadstart: new Event('pinecone-start'),\n\n\t/**\n\t * @event pinecone-end\n\t * @summary will be dispatched to the window after the page is loaded.\n\t */\n\tloadend: new Event('pinecone-end'),\n\n\t/**\n\t * @description The handler for 404 pages, can be overwritten by a notfound route\n\t * Note that when using x-render or x-views, it'll be set to null in order to let server generate the page\n\t * or user specify the view, respectively.\n\t * if setting routes in the router with x-render you must set notfound route as well\n\t * for example this can be used to validate routes in browser.\n\t * @param {object} context The context object.\n\t */\n\tnotfound: function (context) {\n\t\tconsole.error(\n\t\t\t`Pinecone Router: requested path ${context.path} was not found`\n\t\t);\n\t},\n\n\t/**\n\t * Entry point of the plugin\n\t */\n\tstart() {\n\t\tif (!window.Alpine) {\n\t\t\tthrow new Error(\n\t\t\t\t'Alpine is required for `Pinecone Router` to work.'\n\t\t\t);\n\t\t}\n\n\t\t// Routers that are already initialized\n\t\tlet currentRouterCount = 0;\n\n\t\t// Whenever a component is initialized, check if it is a router\n\t\t// and check if the children are valid routes\n\t\tAlpine.onComponentInitialized((component) => {\n\t\t\tif (component.$el.hasAttribute('x-router')) {\n\t\t\t\t// This will check if the router is loaded and return,\n\t\t\t\t// it'll be needed when switching a page\n\t\t\t\t// so the router from that page wont be loaded again if it's the same one\n\t\t\t\tif (component.$el.getAttribute('x-router') == 'loaded') return;\n\n\t\t\t\tif (currentRouterCount > 1) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Pinecone Router: Only one router can be in a page.'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Detect router settings\n\n\t\t\t\t// The router basepath which will be added at the begining\n\t\t\t\t// of every route in this router\n\t\t\t\tif (component.$el.hasAttribute('x-base')) {\n\t\t\t\t\tthis.settings.basepath = component.$el.getAttribute(\n\t\t\t\t\t\t'x-base'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// hash routing\n\t\t\t\tif (component.$el.hasAttribute('x-hash')) {\n\t\t\t\t\tthis.settings.hash = true;\n\t\t\t\t}\n\n\t\t\t\tif (component.$el.hasAttribute('x-slash')) {\n\t\t\t\t\tlet trail = component.$el.getAttribute('x-slash');\n\t\t\t\t\tif (trail == 'add' || trail == '') trail = true;\n\t\t\t\t\telse if (trail == 'remove') trail = false;\n\t\t\t\t\telse\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Pinecone Router: Invalid value supplied to x-slash must be either \"add\", \"remove\", or empty'\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.settings.trailingSlash = trail;\n\t\t\t\t}\n\n\t\t\t\tmiddleware('init', [component]);\n\n\t\t\t\t// Loop through child elements of this router\n\t\t\t\t// filtering out everything that isn't a template tag\n\t\t\t\t// and doesnt have x-route atttribute.\n\t\t\t\tArray.from(component.$el.children)\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(el) =>\n\t\t\t\t\t\t\tel.tagName.toLowerCase() == 'template' &&\n\t\t\t\t\t\t\tel.hasAttribute('x-route')\n\t\t\t\t\t)\n\t\t\t\t\t.forEach((el) => {\n\t\t\t\t\t\tthis.processRoute(el, component);\n\t\t\t\t\t});\n\n\t\t\t\tcomponent.$el.setAttribute('x-router', 'loaded');\n\t\t\t\tcurrentRouterCount++;\n\n\t\t\t\tif (!this.settings.hash) {\n\t\t\t\t\t// navigate to the current page to handle it\n\t\t\t\t\t// ONLY if we not using hash routing for the default router\n\t\t\t\t\tthis.navigate(window.location.pathname, false, true);\n\t\t\t\t} else {\n\t\t\t\t\tif (window.location.hash == '') {\n\t\t\t\t\t\tdocument.location.href =\n\t\t\t\t\t\t\twindow.location.pathname + '#/';\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.navigate(\n\t\t\t\t\t\t\twindow.location.hash.substring(1),\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.loaded = true;\n\t\t\t\twindow.dispatchEvent(this.routerloaded);\n\t\t\t}\n\t\t});\n\n\t\t// Intercept click event in links\n\t\tthis.interceptLinks();\n\n\t\t// handle navigation events not emitted by links, for exmaple, back button.\n\t\twindow.addEventListener('popstate', () => {\n\t\t\tif (this.settings.hash) {\n\t\t\t\tif (window.location.hash != '') {\n\t\t\t\t\tthis.navigate(window.location.hash.substring(1), true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.navigate(window.location.pathname, true);\n\t\t\t}\n\t\t});\n\n\t\tAlpine.addMagicProperty('router', () => {\n\t\t\treturn window.PineconeRouter.currentContext;\n\t\t});\n\t},\n\n\t/**\n\t * Take the template element of a route and the router component\n\t * @param {Element} el the routes HTML element, must be a template tag.\n\t * @param {object} component the router Alpine component\n\t */\n\tprocessRoute(el, component) {\n\t\t// The path will be on x-route and handler on x-handler\n\t\t// The path must be a string\n\t\tlet path = el.getAttribute('x-route');\n\n\t\tif (path.indexOf('#') > -1) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Pinecone Router: A route's path may not have a hash, using x-hash is sufficiant.\"\n\t\t\t);\n\t\t}\n\n\t\tmiddleware('onBeforeRouteProcessed', [el, component, path]);\n\n\t\t// will hold handlers as functions\n\t\tlet handlers = [];\n\t\tif (\n\t\t\tel.hasAttribute('x-handler') == false &&\n\t\t\t!this.settings.allowNoHandler\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t'Pinecone Router: routes must have a handler unless using x-views or x-render.'\n\t\t\t);\n\t\t} else if (el.hasAttribute('x-handler')) {\n\t\t\t// Get the handlers which is a string because it's an attribute value\n\t\t\t// Use that string as an index to the component method which is meant to handle the route\n\t\t\t// allow comma separated handler names.\n\t\t\tlet handlerNamesArray = el\n\t\t\t\t.getAttribute('x-handler')\n\t\t\t\t.replace(/\\s/g, '')\n\t\t\t\t.split(',')\n\t\t\t\t//https://stackoverflow.com/questions/9141951/splitting-string-by-whitespace-without-empty-elements/39184134#comment67308788_39184134\n\t\t\t\t.filter((i) => i);\n\n\t\t\t// get the handler function from the parent\n\t\t\thandlerNamesArray.forEach((handlerName, index) => {\n\t\t\t\ttry {\n\t\t\t\t\thandlers[index] = component.getUnobservedData()[\n\t\t\t\t\t\thandlerName\n\t\t\t\t\t];\n\t\t\t\t\tif (typeof handlers[index] != 'function') {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Pinecone Router: The handler must be a function name.'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new Error('Pinecone Router: ' + error);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (path == 'notfound') {\n\t\t\t\t// register the route as a 404 route\n\t\t\t\tthis.notfound = handlers;\n\t\t\t}\n\t\t}\n\n\t\tif (path != 'notfound') {\n\t\t\t// if specified add the basepath but only if not using hash routing\n\t\t\tif (this.settings.basepath != '/' && !this.settings.hash) {\n\t\t\t\tpath = this.settings.basepath + path;\n\t\t\t}\n\n\t\t\tpath = processTrailingSlash(path, this.settings.trailingSlash);\n\n\t\t\t// register the new route if possible\n\t\t\tthis.addRoute(path, handlers);\n\t\t}\n\t},\n\n\t/**\n\t * @description Add a handler to click events on all links currently in the page\n\t * if using page or views rendering this will be called everytime the page changes\n\t * this may also be called by the developer if they added other links dynamicly\n\t */\n\tinterceptLinks() {\n\t\tdocument.querySelectorAll('a').forEach((el) => {\n\t\t\t// check if we already intercepted this link\n\t\t\tif (el.hasAttribute('x-link')) return;\n\t\t\t// check if the link is a navigation/relative link\n\t\t\tif (validLink(el, this.settings.hash) == false) return;\n\n\t\t\tmiddleware('onLinkIntercepted', [el]);\n\n\t\t\tif (this.settings.interceptLinks) {\n\t\t\t\tel.addEventListener(\n\t\t\t\t\t'click',\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlet link = el.pathname;\n\t\t\t\t\t\tif (this.settings.hash) {\n\t\t\t\t\t\t\twindow.location.hash = '#' + link;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.navigate(link);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// add an x-link attribute this will tell this function\n\t\t\t// that the link already been handled.\n\t\t\tel.setAttribute('x-link', '');\n\t\t});\n\t},\n\n\t/**\n\t *  Go to the specified path without reloading\n\t * @param {string} path the path with no hash even if using hash routing\n\t * @param {boolean} frompopstate this will be set to true if called from window.onpopstate event\n\t * @param {boolean} firstload this will be set to true if this is the first page loaded, also from page reload\n\t */\n\tnavigate(path, frompopstate = false, firstload = false) {\n\t\t// process hash route individually\n\t\twindow.dispatchEvent(this.loadstart);\n\n\t\tif (path == null) {\n\t\t\tpath = '/';\n\t\t}\n\n\t\t// only add basepath if it was set\n\t\t// if not using hash routing\n\t\t// and if it wasn't added already\n\t\tif (\n\t\t\tthis.settings.basepath != '/' &&\n\t\t\t!this.settings.hash &&\n\t\t\tpath.indexOf(this.settings.basepath) != 0\n\t\t) {\n\t\t\tpath = this.settings.basepath + path;\n\t\t}\n\n\t\tif (path != this.settings.basepath) {\n\t\t\t// add or remove trailing slash based on settings\n\t\t\tpath = processTrailingSlash(path, this.settings.trailingSlash);\n\t\t} else if (!path.endsWith('/')) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\tconst route = this.routes.find((route) => {\n\t\t\treturn match(route, path);\n\t\t});\n\n\t\tlet notfound = route == null;\n\t\tlet context;\n\t\tif (notfound) {\n\t\t\tcontext = buildContext('notfound', path, {});\n\t\t\tif (this.notfound != null) {\n\t\t\t\treturn handle(this.notfound, context);\n\t\t\t}\n\t\t} else {\n\t\t\tcontext = buildContext(route.path, path, route.props);\n\t\t}\n\n\t\tthis.currentContext = context;\n\n\t\tif (\n\t\t\tmiddleware('onBeforeHandlersExecuted', [\n\t\t\t\troute,\n\t\t\t\tpath,\n\t\t\t\tfirstload,\n\t\t\t\tnotfound,\n\t\t\t]) == false\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// the route can be null in case using page rendering with no routes\n\t\t// handle routes before rendering to allow checking for permissions etc.\n\t\tif (route != null && route.handlers != null) {\n\t\t\t// will only be false when returning context.redirect().\n\t\t\tif (handle(route.handlers, context) == false) {\n\t\t\t\treturn; // so redirect without finishing\n\t\t\t}\n\t\t}\n\n\t\t// do not call pushstate from popstate event https://stackoverflow.com/a/50830905\n\t\t// and if the route is not found only push when pushNotfoundToHistory is true\n\t\tif (\n\t\t\t!frompopstate &&\n\t\t\t!(notfound && !this.settings.pushNotfoundToHistory)\n\t\t) {\n\t\t\tlet fullpath = '';\n\n\t\t\tif (this.settings.hash) {\n\t\t\t\tfullpath = '#';\n\t\t\t\tif (window.location.pathname != '/') {\n\t\t\t\t\tfullpath += window.location.pathname;\n\t\t\t\t}\n\t\t\t\tfullpath += window.location.search + path;\n\t\t\t} else {\n\t\t\t\tfullpath = path + window.location.search + window.location.hash;\n\t\t\t}\n\n\t\t\thistory.pushState({ path: fullpath }, '', fullpath);\n\t\t}\n\n\t\tif (\n\t\t\tmiddleware('onHandlersExecuted', [\n\t\t\t\troute,\n\t\t\t\tpath,\n\t\t\t\tfirstload,\n\t\t\t\tnotfound,\n\t\t\t]) == false\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow.dispatchEvent(this.loadend);\n\t},\n\n\t/**\n\t * Add a new route\n\t * @param {string} path\n\t * @param {array} handlers array of functions\n\t */\n\taddRoute(path, handlers) {\n\t\t// check if the route was registered on the same router.\n\t\tif (this.routes.find((r) => r.path == path) != null) {\n\t\t\tthrow new Error('Pinecone Router: route already exist');\n\t\t}\n\n\t\tthis.routes.push(new Route(path, handlers));\n\t},\n\n\t/**\n\t * Remove a route\n\t * @param {string} path\n\t */\n\tremoveRoute(path) {\n\t\tthis.routes = this.routes.filter((r) => r.path != path);\n\t},\n};\n\nconst alpine = window.deferLoadingAlpine || ((callback) => callback());\n\nwindow.PineconeRouter = PineconeRouter;\n\nwindow.deferLoadingAlpine = function (callback) {\n\twindow.PineconeRouter.start();\n\n\talpine(callback);\n};\n\nexport default PineconeRouter;\n"],"names":["Route","constructor","path","handlers","props","this","setProps","newProps","isLocation","window","history","location","processTrailingSlash","trail","endsWith","substr","length","buildContext","route","query","search","substring","hash","redirect","PineconeRouter","navigate","middleware","func","args","PineconeRouterMiddlewares","forEach","plugin","handle","context","i","version","routes","settings","interceptLinks","basepath","trailingSlash","allowNoHandler","pushNotfoundToHistory","loaded","currentContext","routerloaded","Event","loadstart","loadend","notfound","console","error","start","Alpine","Error","currentRouterCount","onComponentInitialized","component","$el","hasAttribute","getAttribute","Array","from","children","filter","el","tagName","toLowerCase","processRoute","setAttribute","document","href","pathname","dispatchEvent","addEventListener","addMagicProperty","indexOf","replace","split","handlerName","index","getUnobservedData","addRoute","querySelectorAll","nodeName","toUpperCase","parentNode","svg","name","link","url","loc","samePath","target","baseVal","URL","toString","anc","createElement","toURL","protocol","hostname","port","sameOrigin","validLink","e","preventDefault","frompopstate","firstload","find","requestPath","paramNames","regexPath","_full","_colon","push","routeMatch","match","RegExp","input","slice","reduce","params","value","fullpath","pushState","r","removeRoute","alpine","deferLoadingAlpine","callback"],"mappings":"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"}